void DrawBezier(HDC hdc, POINT apt[]) {
  PolyBezier(hdc, apt, 4);
  MoveToEx(hdc, apt[0].x, apt[0].y, NULL);
  LineTo(hdc, apt[1].x, apt[1].y);
  MoveToEx(hdc, apt[2].x, apt[2].y, NULL);
  LineTo(hdc, apt[3].x, apt[3].y);

}

LRESULT CALLBACK WindowProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam) {

    static POINT apt[4];
    int cxClient, cyClient;
    HDC hdc;
    PAINTSTRUCT ps;
    RECT aRect;

    switch (msg) {
      // to draw to the screen
      case WM_SIZE:
        cxClient = LOWORD(lParam);
        cyClient = HIWORD(lParam);
        apt[0].x = cxClient / 4;
        apt[0].y = cyClient / 2;

        apt[1].x = cxClient / 4;
        apt[1].y = cyClient / 2;

        apt[2].x = cxClient / 4;
        apt[2].y = 3 * cyClient / 2;

        apt[3].x = 3 * cxClient / 4;
        apt[3].y = cyClient / 2;

        return 0;

      case WM_LBUTTONDOWN:
      case WM_RBUTTONDOWN:
      case WM_MOUSEMOVE:
        if(wParam & MK_LBUTTON || wParam & MK_RBUTTON) {
          hdc = GetDC(hWnd);
          SelectObject(hdc, GetStockObject(WHITE_PEN));
          DrawBezier(hdc, apt);
          if(wParam & MK_LBUTTON) {
            apt[1].x = LOWORD(lParam);
            apt[1].y = HIWORD(lParam);
          }
          if(wParam & MK_RBUTTON) {
            apt[2].x = LOWORD(lParam);
            apt[2].y = HIWORD(lParam);
          }
          SelectObject(hdc, GetStockObject(BLACK_PEN));
          DrawBezier(hdc, apt);
          ReleaseDC(hWnd, hdc);
        }
        return 0;

      case WM_PAINT:
        InvalidateRect(hWnd, NULL, TRUE);

        hdc = BeginPaint(hWnd, &ps);
        DrawBezier(hdc, apt);

        EndPaint(hWnd, &ps);
        return 0;

      case WM_COMMAND:
        // switch (HIWORD(wParam)) {
        //   case BN_CLICKED:
        //     if(LOWORD(wParam) == BUTTON1){
        //       MessageBox(hWnd, "Button 1 Clicked", "Message Box", MB_OK );
        //       return 0;
        //     }
        //     if(LOWORD(wParam) == BUTTON2){
        //       MessageBox(hWnd, "Button 2 Clicked", "Message Box", MB_OK );
        //       return 0;
        //     }
        //     return 0;
        // }
        return 0;
      case WM_DESTROY:
        PostQuitMessage(WM_QUIT);
        return 0;
      default:
        return DefWindowProc(hWnd, msg, wParam, lParam);
    }
}
